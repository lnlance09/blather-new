@import "./_colors.scss";

$header-height: "76px";

* {
	// border-radius: 0 !important;
}

body {
	// background: $invertedBackgroundColor;
	margin: 0;
  	-webkit-font-smoothing: antialiased;
  	-moz-osx-font-smoothing: grayscale;
}

.Toastify__toast-container--bottom-left .Toastify__toast-body {
	color: $white;
	font-family: 'Overpass', sans-serif;
	font-size: 16px;
    text-align: center;
}

.Toastify__toast--success {
	background: $green;
	border-radius: 4px !important;
}

.Toastify__toast--error {
	background: $lightRed;
	border-radius: 4px !important;
}

.Toastify__toast--warn {
	background: $lightYellow;
	border-radius: 4px !important;
}

.appWrapper {
	a {
		color: $blue;
	}

	span.blue {
		color: $blue;
	}

	span.green {
		color: $green;
	}

	span.orange {
		color: $orange;
	}

	span.red {
		color: $red;
	}

	.facebookIcon {
		color: $facebook;
	}
	
	.twitterIcon {
		color: $twitter;
	}
	
	.youtubeIcon {
		color: $youtube;
	}
	
	.patreonIcon {
		color: $patreon;
	}
	
	.redditIcon {
		color: $reddit;
	}

	.smooth-image {
		transition: opacity 1s;
	}
	
	.image-visible {
		opacity: 1;
	}

	.image-hidden {
		background-image: linear-gradient(90deg, #ccc, #999, #ccc);
		opacity: 0;
	}

	&.inverted {
		background: $invertedBackgroundColor;

		a {
			color: $lightBlue;
		}

		span.blue {
			color: $lightBlue;
		}

		span.green {
			color: $lightGreen;
		}

		span.orange {
			color: $lightOrange;
		}

		span.red {
			color: $lightRed;
		}
	}

	.mainContainer {
		min-height: 860px;

		.mainContent {
			margin-top: 25px;

			* {
				// font-family: 'IBM Plex Serif', serif !important;
			}
		}

		&.full {
			width: 100% !important;
		}

		.centeredLoader {
			min-height: 300px;
			position: relative;

			.ui.loader.inverted {
				color: $white;
				left: 50%;
				position: absolute;
				top: 50%;
				transform: translate(-50%, -50%);
				z-index: 9;
			}
		}

		&.aboutPage, &.privacyPage, &.rulesPage {
			p.header {
				font-weight: normal;
			}

			.ui.list.bulleted.inverted {
				.item {
					.header {
						color: $lightBlue !important;
						cursor: pointer;
						font-weight: normal;
					}

					&::before {
						color: $white;
					}
				}

			}
		}

		&.fallaciesPage, &.socialMediaPage, &.usersPage {
			.ui.grid.stackable {
				.column {
					@media only screen and (max-width: 1025px) {
						padding-bottom: 7px;
						padding-top: 7px;
					}
				}
			}
		}

		&.aboutPage {
			
		}

		&.activityPage {
			
		}

		&.argumentsPage {
			
		}

		&.assignPage {
			
		}

		&.contactPage {
			
		}

		&.forgotPage {
			
		}

		&.griftersPage {
			.cards {
				.card {
					box-shadow: none;

					img {
						// border-radius: 0 !important;
					}
				}
			}
		}

		&.notFoundPage {
			min-height: 40em;
    		position: relative;

			h1.notFoundHeader {
				left: 50%;
				margin: 0;
				margin-right: -50%;
				position: absolute;
				top: 50%;
				transform: translate(-50%, -50%);
			}
		}

		&.privacyPage {
			
		}

		&.referencePage {
			.refSegment {
				box-shadow: none;
				cursor: pointer;
			}
		}

		&.rulesPage {
			
		}

		&.searchPage {
			
		}

		&.settingsPage {
			.ui.form {
				.newWallet {
					.icon.input input {
						cursor: pointer;
					}
				}
			}

			&.inverted {
				.settingsSegment {
					padding-left: 0 !important;
					padding-right: 0 !important;
				}
			}

			.ui.list {
				.item {
					.header {
						word-break: break-all;
					}

					.makePrimary {
						display: none;
					}

					&:hover {
						.makePrimary {
							display: block;
						}
					}
				}
			}
		}

		&.socialMediaPage {
			padding: 1.5em 0;

			.ui.grid {
				.imgColumn {
					align-items: center;
					display: flex;
					// padding-left: 4em;
					padding-right: 0;

					.ui.segment {
						padding: 1px;

						img {
							border: solid 3px $white;
						}
					}
				}

				.networkBtn {
					margin-left: 12px;
					vertical-align: middle;
				}

				p {
					font-weight: normal;
				}
			}

			.ui.text.container {
				@media only screen and (max-width: 1025px) {
					margin-left: 0;
					margin-right: 0;
				}
			}
		}

		&.signInPage {
			@media only screen and (max-width: 1025px) {
				margin-left: 0 !important;
				margin-right: 0 !important;
			}

			.ui.container.authContainer {
				padding: 1.2em 0;

				@media only screen and (max-width: 1025px) {
					// margin: 0;
				}
			}
		}

		&.inverted {
			background: $invertedBackgroundColor;
		}

		.searchSegment {
			padding: 0 0 1em 0;
		}
	}
}